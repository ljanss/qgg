% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/genomic_reml.R
\name{greml}
\alias{greml}
\title{Genomic REML analysis}
\usage{
greml(y = NULL, X = NULL, GRMlist = NULL, GRM = NULL, theta = NULL,
  ids = NULL, validate = NULL, maxit = 100, tol = 1e-05, bin = NULL,
  ncores = 1, wkdir = getwd(), verbose = FALSE, makeplots = FALSE,
  interface = "R", fm = NULL, data = NULL)
}
\arguments{
\item{y}{vector or matrix of phenotypes}

\item{X}{design matrix for factors modeled as fixed effects}

\item{GRMlist}{list providing information about GRM matrix stored in binary files on disk}

\item{GRM}{list of one or more genomic relationship matrices}

\item{theta}{vector of initial values for REML estimation}

\item{maxit}{maximum number of iterations of reml analysis}

\item{tol}{tolerance, i.e. the maximum allowed difference between two consecutive iterations of reml to declare convergence}

\item{bin}{is the directory for fortrna binaries (dmu1 and dmuai1)}

\item{ncores}{number of cores used for the analysis}

\item{interface}{used linking to external executable fortran binaries (e.g. dmu1 and dmuai1)}

\item{fm}{a formula with model statement for the linear mixed model}

\item{data}{a data frame containing the phenotypic observations and fixed factors specified in the model statements}
}
\value{
Returns a list structure including
\item{llik}{log-likelihood at convergence}
\item{theta}{initial values for reml estimation}
\item{asd}{asymptotic standard deviation}
\item{b}{vector of fixed effect estimates}
\item{varb}{vector of variances of fixed effect estimates}
\item{g}{vector of random effect estimates}
\item{e}{vector of residual effects}
}
\description{
Estimation of genomic parameters (e.g. (co)variance and heritability) using restricted maximum likelihood estimation (REML) 
and prediction of genomic predisposition using BLUP. 

The steps involved in the linear mixed model analyses, 1) computation of genomic relationship matrices (GRM), 
2) estimation of variance component parameters in the model, and 3) prediction of genetic predisposition or phenotypes. 

The linear mixed model fitted can account for multiple genetic factors (fixed or random genetic marker effects), 
adjust for complex family relationships or population stratification, and adjust for other non-genetic factors 
including lifestyle characteristics. The linear mixed model can easily be extended to fit multiple correlated phenotypes. 
Different genetic architectures (infinitesimal, few large and many small effects) is accounted for by modeling 
genetic markers in different sets as fixed or random effects and by specifying individual genetic marker weights. 
Different genetic models (e.g. additive and non-additive) can be specified.
}
\details{
The GRM's can be accessed from the R environment or from binary files stored on disk fascilitating analyses of 
large data sets. First and second derivatives of log-likehood can be obtained in addition to asymtotic standard 
deviation of parameter estimates. Predicted random effects and single marker effects and statistics can be obtained. 
Covariance decomposition procedures. Cross validation procedures for assessment of prediction accuracy and model selection.
}
\examples{

# Simulate data
W <- matrix(rnorm(20000000), ncol = 10000)
	colnames(W) <- as.character(1:ncol(W))
	rownames(W) <- as.character(1:nrow(W))
y <- rowSums(W[, 1:10]) + rowSums(W[, 1001:1010]) + rnorm(nrow(W))

# Create model
data <- data.frame(y = y, mu = 1)
fm <- y ~ 0 + mu
X <- model.matrix(fm, data = data)

# Compute GRM
GRM <- grm(W = W)

# REML analyses
fitG <- greml(y = y, X = X, GRM = list(GRM))

# REML analyses and cross validation

# Create marker sets
setsGB <- list(A = colnames(W)) # gblup model
setsGF <- list(C1 = colnames(W)[1:1000], C2 = colnames(W)[1001:2000], C3 = colnames(W)[2000:10000]) # gfblup model
setsGT <- list(C1 = colnames(W)[1:10], C2 = colnames(W)[1001:1010], C3 = colnames(W)[1:10000]) # true model

GB <- lapply(setsGB, function(x) {grm(W = W[, x])})
GF <- lapply(setsGF, function(x) {grm(W = W[, x])})
GT <- lapply(setsGT, function(x) {grm(W = W[, x])})

n <- length(y)
fold <- 10
nvalid <- 5

validate <- replicate(nvalid, sample(1:n, as.integer(n / fold)))
cvGB <- greml(y = y, X = X, GRM = GB, validate = validate)
cvGF <- greml(y = y, X = X, GRM = GF, validate = validate)
cvGT <- greml(y = y, X = X, GRM = GT, validate = validate)

cvGB$accuracy
cvGF$accuracy
cvGT$accuracy


# bin <- "C:/Program Files (x86)/QGG-AU/DMUv6/R5.2-EM64T/bin"
# data <- data.frame(f = factor(sample(1:2, nrow(W), replace = TRUE)), g = factor(1:nrow(W)), y = y)
# fm <- y ~ f + (1 | g~G) 
# fit <- greml(fm = list(fm), GRM = list(G=G), data = data, interface="DMU")
# str(fit)

}
\references{
Lee, S. H., & van Der Werf, J. H. (2006). An efficient variance component approach implementing an average information REML suitable for combined LD and linkage mapping with a general complex pedigree. Genetics Selection Evolution, 38(1), 25.
}
\author{
Peter Soerensen
}
