% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multiple_marker_set_test.R
\name{hgTest}
\alias{hgTest}
\title{Genetic marker set tests based on the hyperG test}
\usage{
hgTest(p = NULL, sets = NULL, threshold = 0.05)
}
\arguments{
\item{p}{vector of single marker p-values (e.g. based on a t-stat)}

\item{sets}{list of marker sets - names corresponds to rownames in stat}

\item{threshold}{single marker p-value cut-off}
}
\value{
Returns vector of p values with length equal to the number of sets
}
\description{
Genetic marker set tests based on the hyperG test statistics for a set of genetic markers.
}
\details{
The hyperG marker set test tests a predefined set of markers (i.e. those within a particular genomic feature)
for an association with the trait phenotype.
Under the null hypothesis (associated markers are picked at random from the total number of tested 
genetic markers) it is assumed that the observed count statistic is a realization from a hypergeometric 
distribution.
This hypothesis can be formulated and tested in a number of ways. Here we consider a test statistic based 
on counting the number of genetic markers in the feature that are associated to trait phenotype. 
A test based on the count test statistic is likely to have high power to detect association if the genomic 
feature harbours genetic markers with large effects.
}
\examples{

# Simulate data
W <- matrix(rnorm(2000000), ncol = 10000)
  colnames(W) <- as.character(1:ncol(W))
y <- rowSums(W[, 1:10]) + rowSums(W[, 1001:1010]) + rnorm(nrow(W))

# REML analyses 
data <- data.frame(y = y, mu = 1)
fm <- y ~ mu
fit <- gfm(fm = fm, W = W, sets = list(colnames(W)), data = data)

# hyperG set test 
sets <- list(A = as.character(1:100), B = as.character(101:1000), C = as.character(1001:5000), D = as.character(5001:10000))
p <- pt(fit$s / fit$vs)
res <- hgTest(p = p, sets = sets, threshold = 0.05)

}
\author{
Peter SÃ¸rensen
}
